// Generated by CoffeeScript 1.12.7
(function() {
  var Unprocessor, pushRe, sanitizeRe;

  pushRe = /__out\.push\((.*)\)/;

  sanitizeRe = /__sanitize\((.*)\)/;

  module.exports = Unprocessor = (function() {
    Unprocessor.unprocess = function(source) {
      var unprocessor;
      unprocessor = new Unprocessor(source);
      return unprocessor.unprocess();
    };

    function Unprocessor(source) {
      this.source = source;
      this.output = [];
    }

    Unprocessor.prototype.unprocess = function() {
      var actual, i, indent, len, line, source, trimmed;
      source = this.source.split('\n');
      for (i = 0, len = source.length; i < len; i++) {
        line = source[i];
        indent = " ".repeat(line.search(/\S|$/));
        if (line.includes("__out.push")) {
          actual = this.breakOutPush(line);
          if (!actual) {
            continue;
          }
          this.output.push(indent + actual);
        } else {
          trimmed = line.replace(/this./g, "").trim();
          if (!trimmed) {
            continue;
          }
          this.output.push(indent + "<% " + trimmed + " %>");
        }
      }
      return this.output.filter(function(line) {
        return line;
      }).join("\n");
    };

    Unprocessor.prototype.breakOutPush = function(string) {
      var pushMatch, result;
      pushMatch = string.match(pushRe)[1];
      if (pushMatch.includes("JST")) {
        return "<%- " + pushMatch + " %>";
      }
      if (pushMatch.includes("__sanitize")) {
        return "<%= " + pushMatch.match(sanitizeRe)[1].replace(/this./g, "") + " %>";
      }
      result = pushMatch.split("\\n").join("").split("'").join("").trim();
      return result;
    };

    return Unprocessor;

  })();

}).call(this);
